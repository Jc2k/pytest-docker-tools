name: CI

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Check out code from GitHub
      uses: actions/checkout@v4
    - name: Install uv
      uses: astral-sh/setup-uv@v5
    - name: Set up Python
      uses: actions/setup-python@v5.1.0
      with:
        python-version: "3.11"
    - name: Install dependencies
      run: |
        sudo apt-get update
        python -m pip install --upgrade pip build setuptools
        pip install . .[test]
    - name: Lint/test with pre-commit
      run: SKIP=no-commit-to-branch uv run pre-commit run --all-files

  tests:
    name: tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install the project
        run: uv sync --all-extras --dev

      - name: Run tests
        # For example, using `pytest`
        run: uv run pytest tests

  # Make sure commit messages follow the conventional commits convention:
  # https://www.conventionalcommits.org
  commitlint:
    runs-on: ubuntu-latest
    # if: github.ref != 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: wagoid/commitlint-github-action@v5

  release:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs:
      - lint
      - tests
      - commitlint
    concurrency: release
    permissions:
      id-token: write
      contents: write

    outputs:
      released: ${{ steps.release.outputs.released }}
      version: ${{ steps.release.outputs.version }}
      tag: ${{ steps.release.outputs.tag }}

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # This action uses Python Semantic Release v8
    - name: Python Semantic Release
      id: release
      uses: python-semantic-release/python-semantic-release@v8.7.0
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish package distributions to GitHub Releases
      uses: python-semantic-release/upload-to-gh-release@v8.7.0
      if: steps.release.outputs.released == 'true'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}

  pypi:
    runs-on: ubuntu-latest
    concurrency: release
    permissions:
      id-token: write
      contents: write
    environment:
      name: pypi
      url: https://pypi.org/p/pytest-docker-tools
    needs:
    - release
    if: needs.release.outputs.released == 'true'

    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ needs.release.outputs.tag  }}

    - name: Set up Python
      uses: actions/setup-python@v5.1.0
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        sudo apt-get update
        python -m pip install --upgrade pip build setuptools
        pip install . .[test]

    - name: build
      run: python -m build

    - name: Publish package distributions to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
